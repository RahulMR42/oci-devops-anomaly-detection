version: 0.1
component: build
timeoutInSeconds: 6000
runAs: root
shell: bash
env:
  # these are local variables to the build config
  variables:
  # the value of a vaultVariable is the secret-id (in OCI ID format) stored in the OCI Vault service
  # you can then access the value of that secret in your build_spec.yaml commands
  vaultVariables:
  #  EXAMPLE_SECRET: "YOUR-SECRET-OCID"
  # exportedVariables are made available to use as parameters in sucessor Build Pipeline stages
  # For this Build to run, the Build Pipeline needs to have a BUILDRUN_HASH parameter set
  exportedVariables:
  #Variable to export and use with in further stages.


steps:
  - type: Command
    timeoutInSeconds: 6000
    name: "Run Anomaly Detection"
    command: |
      cd ${OCI_PRIMARY_SOURCE_DIR}
      cd ai-data-references
      oci anomaly-detection model detect-anomalies-inline --model-id ${MODEL_OCID} --data file://data.json --signal-names file://signal-names.json >output.json
      counter=`cat output.json|grep -w anomalies|wc -l`
      if [[ ${counter} != 0 ]]
      then
      echo "Found Anomalies"
      cat output.json
      exit 1
      fi
      echo "No anomalies"

    onFailure:
      - type: Command
        command: |
          echo "Handling Failure"
          echo "Failure successfully handled"
        timeoutInSeconds: 40
        runAs: root


#outputArtifacts:
#  - name: sample
#    type: DOCKER_IMAGE/BINARY
#    # this location tag doesn't effect the tag used to deliver the container image
#    # to the Container Registry
#    location: